- name: Release Drafter
  # You may pin to the exact commit or the version.
  # uses: release-drafter/release-drafter@06d4616a80cd7c09ea3cf12214165ad6c1859e67
  uses: release-drafter/release-drafter@v5.11.0
  with:
    # If your workflow requires multiple release-drafter configs it be helpful to override the config-name. The config should still be located inside `.github` as that's where we are looking for config files.

    #config-name: # optional, default is release-drafter.yml
    # The name that will be used in the GitHub release that's created or updated. This will override any `name-template` specified in your `release-drafter.yml` if defined.

    #name: # optional
    # The tag name to be associated with the GitHub release that's created or updated. This will override any `tag-template` specified in your `release-drafter.yml` if defined.

    #tag: # optional
    # The version to be associated with the GitHub release that's created or updated. This will override any version calculated by the release-drafter.

    #version: # optional
    # A boolean indicating whether the release being created or updated should be immediately published.

    #publish: # optional, default is 
    # A boolean indicating whether the relase being created or updated is a prerelease.

    #prerelease: # optional, default is 
    
    change-template: '- $TITLE (#$NUMBER - thanks to @$AUTHOR)'
    name-template: '$NEXT_PATCH_VERSION 🌈'
    tag-template: '$NEXT_PATCH_VERSION'
    categories:
      - title: '🚀 Features'
        labels:
          - 'feature'
          - 'enhancement'
          - 'added'
      - title: '🐛 Bug Fixes'
        labels:
          - 'fix'
          - 'bugfix'
          - 'bug'
          - 'fixed'
      - title: '⚙️ Changes'
        labels:
          - 'changed'
          - 'dependencies'
      - title: '🧰 Removed'
        label: 'removed'

    template: |
      ## Changes
      
      $CHANGES
